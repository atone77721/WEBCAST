name: 🏀 Update NBAWebcast Playlist 📺

on:
  schedule:
    - cron: '0 * * * *'  # runs every hour
  workflow_dispatch:

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install Python dependencies & Playwright
        run: |
          python -m pip install --upgrade pip
          pip install playwright urllib3 aiohttp beautifulsoup4 lxml
          playwright install-deps
          playwright install

      - name: 🔒 Restore Base64 Script
        env:
          NBAWEBCAST_B64: ${{ secrets.NBAWEBCAST_B64 }}
        run: |
          echo "⚙️ Restoring script..."
          echo "$NBAWEBCAST_B64" | base64 --decode > nbawebcast.py
          echo "✅ nbawebcast.py restored."

      - name: 🎯 Run NBA scraper
        run: |
          echo "🚀 Running nbawebcast.py..."
          python nbawebcast.py || { echo "::error::❌ Script failed"; exit 1; }

      - name: 🕵️ Verify NBAWebcast.m3u8
        run: |
          echo "🔍 Checking for NBAWebcast.m3u8..."
          ls -lh || true
          if [ ! -f "NBAWebcast.m3u8" ]; then
            echo "::error::❌ NBAWebcast.m3u8 not found — script did not generate output."
            exit 1
          fi
          echo "✅ NBAWebcast.m3u8 generated successfully"
          echo "📄 Preview last lines:"
          tail -n 10 NBAWebcast.m3u8 || true

      - name: 💾 Commit & Push if Updated
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet; then
            echo "✅ No new changes to commit"
            exit 0
          fi

          git commit -m "🏀 Update NBAWebcast.m3u8 $(date -u +'%Y-%m-%d %H:%M:%S UTC')"

          sleep $((RANDOM % 10 + 5))

          if ! git push origin main; then
            echo "⚠️ Push rejected. Trying safe fetch + merge..."
            git pull origin main --rebase || {
              echo "❌ Rebase failed. Exiting to avoid corruption."
              exit 1
            }
            git push origin main || {
              echo "❌ Second push failed. Remote changed again."
              exit 1
            }
          fi
