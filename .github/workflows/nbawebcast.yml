name: üèàüèí‚öæ Update NBAWebcast Playlist üì∫

on:
  schedule:
    - cron: '0 * * * *'  # runs every hour
  workflow_dispatch:

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üêç Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: üì¶ Install Python dependencies & Playwright
        run: |
          python -m pip install --upgrade pip
          pip install playwright urllib3 aiohttp beautifulsoup4 lxml
          playwright install-deps
          playwright install

      - name: üîí Restore Base64 Script (silent)
        env:
          NBAWEBCAST_B64: ${{ secrets.NBAWEBCAST_B64 }}
        shell: bash
        run: |
          echo "‚öôÔ∏è Restoring script..."
          echo "$NBAWEBCAST_B64" | base64 --decode > nbawebcast.py 2>/dev/null
          echo "‚úÖ nbawebcast.py restored."

      - name: üéØ Run scraping script (errors only)
        shell: bash
        run: |
          echo "üöÄ Running nbawebcast.py (errors only)..."
          LOG_FILE=$(mktemp)

          # Run script quietly
          if ! python webcast.py >"$LOG_FILE" 2>&1; then
            echo "::error::‚ùå nbawebcast.py failed ‚Äî see log below:"
            cat "$LOG_FILE"
            rm -f "$LOG_FILE"
            exit 1
          fi

          rm -f "$LOG_FILE"
          echo "‚úÖ nbawebcast.py completed successfully"

      - name: üíæ Commit & Safely Push if Playlists Changed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add NBAWebcast.m3u8

          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit"
            exit 0
          fi

          git commit -m "üîÅ Update playlists $(date -u +'%a %b %d %T UTC %Y')"

          sleep $((RANDOM % 10 + 5))

          if ! git push origin main; then
            echo "‚ö†Ô∏è Push rejected. Trying safe fetch + merge..."
            git pull origin main --rebase || {
              echo "‚ùå Rebase failed. Exiting to avoid corruption."
              exit 1
            }
            git push origin main || {
              echo "‚ùå Second push failed. Remote changed again."
              exit 1
            }
          fi
